{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\embra\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  ;\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction timerConversion(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainderSeconds = seconds % 60;\n  return `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  const handleFocusDurationIncrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min(focusDuration + 5, 60)));\n\n  const handleFocusDurationDecrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min(focusDuration - 5, 60)));\n\n  const handleBreakDurationIncrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min(breakDuration + 1, 15)));\n\n  const handleBreakDurationDecrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min(breakDuration - 1, 15)));\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stop() {\n    return setIsTimerRunning(() => setSession(null));\n  }\n\n  function sessionTitle() {\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      return ` for ${minutesToDuration(focusDuration)} minutes`;\n    }\n\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"On Break\") {\n      return ` for ${minutesToDuration(breakDuration)} minutes`;\n    }\n  }\n\n  function progressBarTimer() {\n    const focusDurationInSeconds = focusDuration * 60;\n    const breakDurationInSeconds = breakDuration * 60;\n\n    if (isTimerRunning === true && (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      return (focusDurationInSeconds - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / focusDurationInSeconds * 100;\n    }\n\n    if (isTimerRunning === true && (session === null || session === void 0 ? void 0 : session.label) === \"On Break\") {\n      return (breakDurationInSeconds - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / breakDurationInSeconds * 100;\n    }\n\n    return 0;\n  }\n\n  function activeTimer() {\n    if (session !== null) return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timer-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, sessionTitle()), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, timerConversion(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": progressBarTimer() // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${progressBarTimer()}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFocusDurationDecrease,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFocusDurationIncrease,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBreakDurationDecrease,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBreakDurationIncrease,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: stop,\n    disabled: isTimerRunning === true ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }))))), activeTimer());\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/embra/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","timerConversion","seconds","minutes","floor","remainderSeconds","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","handleFocusDurationIncrease","min","handleFocusDurationDecrease","handleBreakDurationIncrease","handleBreakDurationDecrease","Audio","play","playPause","nextState","prevStateSession","stop","sessionTitle","progressBarTimer","focusDurationInSeconds","breakDurationInSeconds","activeTimer","height","width","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);;\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction timerConversion(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainderSeconds = seconds % 60;\n  return `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\n  }\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  \n  const handleFocusDurationIncrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min((focusDuration) + 5, 60)));\n  const handleFocusDurationDecrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min((focusDuration) - 5, 60)));\n\n  const handleBreakDurationIncrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min((breakDuration) + 1, 15)));\n  const handleBreakDurationDecrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min((breakDuration) - 1, 15)));\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  function stop() {\n    return setIsTimerRunning(() => setSession(null));\n  }\n\n  function sessionTitle() {\n    if (session?.label === \"Focusing\" ) {\n    return ` for ${minutesToDuration(focusDuration)} minutes`;\n  }\n    if (session?.label === \"On Break\") {\n      return ` for ${minutesToDuration(breakDuration)} minutes`;\n    } \n  }\n\n  function progressBarTimer() {\n    const focusDurationInSeconds = focusDuration * 60;\n    const breakDurationInSeconds = breakDuration * 60;\n    if (isTimerRunning === true && session?.label === \"Focusing\") {\n      return ((focusDurationInSeconds - session?.timeRemaining) / focusDurationInSeconds * 100);\n    }\n    if (isTimerRunning === true && session?.label === \"On Break\") {\n      return ((breakDurationInSeconds - session?.timeRemaining) / breakDurationInSeconds * 100);\n    }\n    return 0;\n  }\n  \n  function activeTimer() {\n    if (session !== null)\n      return (\n      <span className=\"timer-toggle\">\n      <div>\n      {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n          <h2 data-testid=\"session-title\">\n            {session?.label}{sessionTitle()}\n          </h2>\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {timerConversion(session?.timeRemaining)} remaining\n          </p>\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow= {progressBarTimer()}  // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width:`${progressBarTimer()}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    </span>\n      );\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button onClick = {handleFocusDurationDecrease}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button onClick = {handleFocusDurationIncrease}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button onClick = {handleBreakDurationDecrease}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button onClick = {handleBreakDurationIncrease}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick = {stop}\n              disabled={isTimerRunning === true ? false : true}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      {activeTimer()}\n          </div>\n  );\n  }\n\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}