{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\embra\\\\Pomodoro-Timer-Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\embra\\\\Pomodoro-Timer-Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import\"./Pomodoro.css\";import React,{useState}from\"react\";import classNames from\"../utils/class-names\";import useInterval from\"../utils/useInterval\";import{minutesToDuration}from\"../utils/duration\";// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */function nextTick(prevState){var timeRemaining=Math.max(0,prevState.timeRemaining-1);;return _objectSpread(_objectSpread({},prevState),{},{timeRemaining:timeRemaining});}/**\r\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */function nextSession(focusDuration,breakDuration){/**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */return function(currentSession){if(currentSession.label===\"Focusing\"){return{label:\"On Break\",timeRemaining:breakDuration*60};}return{label:\"Focusing\",timeRemaining:focusDuration*60};};}function timerConversion(seconds){var minutes=Math.floor(seconds/60);var remainderSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainderSeconds<10?'0':'').concat(remainderSeconds);}function Pomodoro(){// Timer starts out paused\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimerRunning=_useState2[0],setIsTimerRunning=_useState2[1];// The current session - null where there is no session running\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),session=_useState4[0],setSession=_useState4[1];// ToDo: Allow the user to adjust the focus and break duration.\nvar _useState5=useState(25),_useState6=_slicedToArray(_useState5,2),focusDuration=_useState6[0],setFocusDuration=_useState6[1];var _useState7=useState(5),_useState8=_slicedToArray(_useState7,2),breakDuration=_useState8[0],setBreakDuration=_useState8[1];var handleFocusDurationIncrease=function handleFocusDurationIncrease(){return setFocusDuration(function(focusDuration){return Math.max(5,Math.min(focusDuration+5,60));});};var handleFocusDurationDecrease=function handleFocusDurationDecrease(){return setFocusDuration(function(focusDuration){return Math.max(5,Math.min(focusDuration-5,60));});};var handleBreakDurationIncrease=function handleBreakDurationIncrease(){return setBreakDuration(function(breakDuration){return Math.max(1,Math.min(breakDuration+1,15));});};var handleBreakDurationDecrease=function handleBreakDurationDecrease(){return setBreakDuration(function(breakDuration){return Math.max(1,Math.min(breakDuration-1,15));});};/**\r\n   * Custom hook that invokes the callback function every second\r\n   *\r\n   * NOTE: You will not need to make changes to the callback function\r\n   */useInterval(function(){if(session.timeRemaining===0){new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();return setSession(nextSession(focusDuration,breakDuration));}return setSession(nextTick);},isTimerRunning?1000:null);/**\r\n   * Called whenever the play/pause button is clicked.\r\n   */function playPause(){setIsTimerRunning(function(prevState){var nextState=!prevState;if(nextState){setSession(function(prevStateSession){// If the timer is starting and the previous session is null,\n// start a focusing session.\nif(prevStateSession===null){return{label:\"Focusing\",timeRemaining:focusDuration*60};}return prevStateSession;});}return nextState;});}function stop(){return setIsTimerRunning(function(){return setSession(null);});}function sessionTitle(){if((session===null||session===void 0?void 0:session.label)===\"Focusing\"){return\" for \".concat(minutesToDuration(focusDuration),\" minutes\");}if((session===null||session===void 0?void 0:session.label)===\"On Break\"){return\" for \".concat(minutesToDuration(breakDuration),\" minutes\");}}function progressBarTimer(){var focusDurationInSeconds=focusDuration*60;var breakDurationInSeconds=breakDuration*60;if(isTimerRunning===true&&(session===null||session===void 0?void 0:session.label)===\"Focusing\"){return(focusDurationInSeconds-(session===null||session===void 0?void 0:session.timeRemaining))/focusDurationInSeconds*100;}if(isTimerRunning===true&&(session===null||session===void 0?void 0:session.label)===\"On Break\"){return(breakDurationInSeconds-(session===null||session===void 0?void 0:session.timeRemaining))/breakDurationInSeconds*100;}return 0;}function activeTimer(){if(session!==null)return/*#__PURE__*/React.createElement(\"span\",{className:\"timer-toggle\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h2\",{\"data-testid\":\"session-title\"},session===null||session===void 0?void 0:session.label,sessionTitle()),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\",\"data-testid\":\"session-sub-title\"},timerConversion(session===null||session===void 0?void 0:session.timeRemaining),\" remaining\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress\",style:{height:\"20px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\",role:\"progressbar\",\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",\"aria-valuenow\":progressBarTimer()// TODO: Increase aria-valuenow as elapsed time increases\n,style:{width:\"\".concat(progressBarTimer(),\"%\")}// TODO: Increase width % as elapsed time increases\n}))))));}return/*#__PURE__*/React.createElement(\"div\",{className:\"pomodoro\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-lg mb-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",\"data-testid\":\"duration-focus\"},/*#__PURE__*/React.createElement(\"span\",{className:\"dur-text\"},\"Focus Duration: \",minutesToDuration(focusDuration))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"button\",{onClick:handleFocusDurationDecrease,type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"decrease-focus\"},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-minus\"})),/*#__PURE__*/React.createElement(\"button\",{onClick:handleFocusDurationIncrease,type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"increase-focus\"},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-plus\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-lg mb-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",\"data-testid\":\"duration-break\"},/*#__PURE__*/React.createElement(\"span\",{className:\"dur-text\"},\"Break Duration: \",minutesToDuration(breakDuration))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"button\",{onClick:handleBreakDurationDecrease,type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"decrease-break\"},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-minus\"})),/*#__PURE__*/React.createElement(\"button\",{onClick:handleBreakDurationIncrease,type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"increase-break\"},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-plus\"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group btn-group-lg mb-2\",role:\"group\",\"aria-label\":\"Timer controls\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",\"data-testid\":\"play-pause\",title:\"Start or pause timer\",onClick:playPause},/*#__PURE__*/React.createElement(\"span\",{className:classNames({oi:true,\"oi-media-play\":!isTimerRunning,\"oi-media-pause\":isTimerRunning})})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"stop\",title:\"Stop the session\",onClick:stop,disabled:isTimerRunning===true?false:true},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-media-stop\"}))))),activeTimer());}export default Pomodoro;","map":{"version":3,"sources":["C:/Users/embra/Pomodoro-Timer-Project/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","timerConversion","seconds","minutes","floor","remainderSeconds","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","handleFocusDurationIncrease","min","handleFocusDurationDecrease","handleBreakDurationIncrease","handleBreakDurationDecrease","Audio","play","playPause","nextState","prevStateSession","stop","sessionTitle","progressBarTimer","focusDurationInSeconds","breakDurationInSeconds","activeTimer","height","width","oi"],"mappings":"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","sourcesContent":["import \"./Pomodoro.css\";\r\nimport React, { useState } from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\n// These functions are defined outside of the component to insure they do not have access to state\r\n// and are, therefore more likely to be pure.\r\n\r\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\r\nfunction nextTick(prevState) {\r\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);;\r\n  return {\r\n    ...prevState,\r\n    timeRemaining,\r\n  };\r\n}\r\n\r\n/**\r\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\r\n\r\nfunction nextSession(focusDuration, breakDuration) {\r\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\r\n  return (currentSession) => {\r\n    if (currentSession.label === \"Focusing\") {\r\n      return {\r\n        label: \"On Break\",\r\n        timeRemaining: breakDuration * 60,\r\n      };\r\n    }\r\n    return {\r\n      label: \"Focusing\",\r\n      timeRemaining: focusDuration * 60,\r\n    };\r\n  };\r\n}\r\n\r\nfunction timerConversion(seconds) {\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainderSeconds = seconds % 60;\r\n  return `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\r\n  }\r\n\r\nfunction Pomodoro() {\r\n  // Timer starts out paused\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  // The current session - null where there is no session running\r\n  const [session, setSession] = useState(null);\r\n\r\n  // ToDo: Allow the user to adjust the focus and break duration.\r\n  const [focusDuration, setFocusDuration] = useState(25);\r\n  const [breakDuration, setBreakDuration] = useState(5);\r\n  \r\n  const handleFocusDurationIncrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min((focusDuration) + 5, 60)));\r\n  const handleFocusDurationDecrease = () => setFocusDuration(focusDuration => Math.max(5, Math.min((focusDuration) - 5, 60)));\r\n\r\n  const handleBreakDurationIncrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min((breakDuration) + 1, 15)));\r\n  const handleBreakDurationDecrease = () => setBreakDuration(breakDuration => Math.max(1, Math.min((breakDuration) - 1, 15)));\r\n  /**\r\n   * Custom hook that invokes the callback function every second\r\n   *\r\n   * NOTE: You will not need to make changes to the callback function\r\n   */\r\n  useInterval(() => {\r\n      if (session.timeRemaining === 0) {\r\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\r\n        return setSession(nextSession(focusDuration, breakDuration));\r\n      }\r\n      return setSession(nextTick);\r\n    },\r\n    isTimerRunning ? 1000 : null\r\n  );\r\n\r\n  /**\r\n   * Called whenever the play/pause button is clicked.\r\n   */\r\n  function playPause() {\r\n    setIsTimerRunning((prevState) => {\r\n      const nextState = !prevState;\r\n      if (nextState) {\r\n        setSession((prevStateSession) => {\r\n          // If the timer is starting and the previous session is null,\r\n          // start a focusing session.\r\n          if (prevStateSession === null) {\r\n            return {\r\n              label: \"Focusing\",\r\n              timeRemaining: focusDuration * 60,\r\n            };\r\n          }\r\n          return prevStateSession;\r\n        });\r\n      }\r\n      return nextState;\r\n    });\r\n  }\r\n\r\n  function stop() {\r\n    return setIsTimerRunning(() => setSession(null));\r\n  }\r\n\r\n  function sessionTitle() {\r\n    if (session?.label === \"Focusing\" ) {\r\n    return ` for ${minutesToDuration(focusDuration)} minutes`;\r\n  }\r\n    if (session?.label === \"On Break\") {\r\n      return ` for ${minutesToDuration(breakDuration)} minutes`;\r\n    } \r\n  }\r\n\r\n  function progressBarTimer() {\r\n    const focusDurationInSeconds = focusDuration * 60;\r\n    const breakDurationInSeconds = breakDuration * 60;\r\n    if (isTimerRunning === true && session?.label === \"Focusing\") {\r\n      return ((focusDurationInSeconds - session?.timeRemaining) / focusDurationInSeconds * 100);\r\n    }\r\n    if (isTimerRunning === true && session?.label === \"On Break\") {\r\n      return ((breakDurationInSeconds - session?.timeRemaining) / breakDurationInSeconds * 100);\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function activeTimer() {\r\n    if (session !== null)\r\n      return (\r\n      <span className=\"timer-toggle\">\r\n      <div>\r\n      {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label}{sessionTitle()}\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {timerConversion(session?.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow= {progressBarTimer()}  // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width:`${progressBarTimer()}%` }} // TODO: Increase width % as elapsed time increases\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </span>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"pomodoro\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n              {/* TODO: Update this text to display the current focus session duration */}\r\n              <span className=\"dur-text\">Focus Duration: {minutesToDuration(focusDuration)}</span>\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n              <button onClick = {handleFocusDurationDecrease}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n              <button onClick = {handleFocusDurationIncrease}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                {/* TODO: Update this text to display the current break session duration */}\r\n                <span className=\"dur-text\">Break Duration: {minutesToDuration(breakDuration)}</span>\r\n              </span>\r\n              <div className=\"input-group-append\">\r\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n                <button onClick = {handleBreakDurationDecrease}\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-break\"\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n                <button onClick = {handleBreakDurationIncrease}\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"increase-break\"\r\n                >\r\n                  <span className=\"oi oi-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\r\n            {/* TODO: Disable the stop button when there is no active session */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"stop\"\r\n              title=\"Stop the session\"\r\n              onClick = {stop}\r\n              disabled={isTimerRunning === true ? false : true}\r\n            >\r\n              <span className=\"oi oi-media-stop\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {activeTimer()}\r\n          </div>\r\n  );\r\n  }\r\n\r\n\r\nexport default Pomodoro;\r\n"]},"metadata":{},"sourceType":"module"}