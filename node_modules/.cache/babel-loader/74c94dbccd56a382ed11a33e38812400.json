{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\embra\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveTimer.js\";\nimport { minutesToDuration, focusDuration, breakDuration, session } from \"./Pomodoro\";\n\nfunction sessionTitle() {\n  if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n    return ` for ${minutesToDuration(focusDuration)} minutes`;\n  }\n\n  if ((session === null || session === void 0 ? void 0 : session.label) === \"On Break\") {\n    return ` for ${minutesToDuration(breakDuration)} minutes`;\n  }\n}\n\nfunction timerConversion(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainderSeconds = seconds % 60;\n  return `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\n}\n\nfunction activeTimer() {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"timer-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, sessionTitle()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, timerConversion(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default activeTimer;","map":{"version":3,"sources":["C:/Users/embra/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveTimer.js"],"names":["minutesToDuration","focusDuration","breakDuration","session","sessionTitle","label","timerConversion","seconds","minutes","Math","floor","remainderSeconds","activeTimer","timeRemaining","height","width"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,OAA1D,QAAyE,YAAzE;;AAEE,SAASC,YAAT,GAAwB;AACtB,MAAI,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,KAAT,MAAmB,UAAvB,EAAoC;AACpC,WAAQ,QAAOL,iBAAiB,CAACC,aAAD,CAAgB,UAAhD;AACD;;AACC,MAAI,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,KAAT,MAAmB,UAAvB,EAAmC;AACjC,WAAQ,QAAOL,iBAAiB,CAACE,aAAD,CAAgB,UAAhD;AACD;AACJ;;AAEC,SAASI,eAAT,CAAyBC,OAAzB,EAAkC;AACpC,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAhB;AACA,QAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAnC;AACA,SAAQ,GAAEC,OAAQ,IAAGG,gBAAgB,GAAG,EAAnB,GAAwB,GAAxB,GAA8B,EAAG,GAAEA,gBAAiB,EAAzE;AACC;;AAGC,SAASC,WAAT,GAAuB;AACnB,sBACA;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OADH,aACGA,OADH,uBACGA,OAAO,CAAEE,KADZ,EACmBD,YAAY,EAD/B,CAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,eAAe,CAACH,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEU,aAAV,CADlB,eANF,CADF,CAFA,eAcA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAe,GALjB,CAKsB;AALtB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAdA,CADA,CADA;AAiCL;;AAED,eAAeH,WAAf","sourcesContent":["import { minutesToDuration, focusDuration, breakDuration, session } from \"./Pomodoro\";\r\n\r\n  function sessionTitle() {\r\n    if (session?.label === \"Focusing\" ) {\r\n    return ` for ${minutesToDuration(focusDuration)} minutes`;\r\n  }\r\n    if (session?.label === \"On Break\") {\r\n      return ` for ${minutesToDuration(breakDuration)} minutes`;\r\n    } \r\n}\r\n\r\n  function timerConversion(seconds) {\r\nconst minutes = Math.floor(seconds / 60);\r\nconst remainderSeconds = seconds % 60;\r\nreturn `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\r\n}\r\n\r\n\r\n  function activeTimer() {\r\n      return (\r\n      <span className=\"timer-toggle\">\r\n      <div>\r\n      {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label}{sessionTitle()}\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {timerConversion(session?.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow= \"0\"  // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </span>\r\n      );\r\n}\r\n\r\nexport default activeTimer;"]},"metadata":{},"sourceType":"module"}